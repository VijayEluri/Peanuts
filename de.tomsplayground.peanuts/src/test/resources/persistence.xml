<accountmanager id="1"><accounts id="2"><account id="3"><name>Test</name><currency id="4">EUR</currency><startBalance>0</startBalance><type>BANK</type><description></description><active>true</active><displayConfiguration class="java.util.concurrent.ConcurrentHashMap" id="5" serialization="custom"><unserializable-parents/><java.util.concurrent.ConcurrentHashMap><default><segmentMask>15</segmentMask><segmentShift>28</segmentShift><segments id="6"><java.util.concurrent.ConcurrentHashMap_-Segment id="7"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="8" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="9"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="10" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="11"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="12" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="13"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="14" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="15"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="16" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="17"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="18" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="19"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="20" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="21"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="22" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="23"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="24" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="25"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="26" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="27"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="28" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="29"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="30" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="31"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="32" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="33"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="34" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="35"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="36" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="37"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="38" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment></segments></default><null/><null/></java.util.concurrent.ConcurrentHashMap></displayConfiguration><transactions class="linked-list" id="39"><transcation id="40"><day id="41"><day>30</day><month>2</month><year>2011</year></day><amount>12.34</amount><splits id="42"/></transcation><transfer-transaction id="43"><day id="44"><day>30</day><month>2</month><year>2011</year></day><amount>-1234.55</amount><splits id="45"/><label></label><target class="account" id="46"><name>Test2</name><currency reference="4"/><startBalance>0</startBalance><type>BANK</type><description></description><active>true</active><displayConfiguration class="java.util.concurrent.ConcurrentHashMap" id="47" serialization="custom"><unserializable-parents/><java.util.concurrent.ConcurrentHashMap><default><segmentMask>15</segmentMask><segmentShift>28</segmentShift><segments id="48"><java.util.concurrent.ConcurrentHashMap_-Segment id="49"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="50" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="51"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="52" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="53"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="54" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="55"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="56" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="57"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="58" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="59"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="60" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="61"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="62" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="63"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="64" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="65"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="66" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="67"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="68" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="69"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="70" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="71"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="72" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="73"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="74" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="75"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="76" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="77"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="78" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment><java.util.concurrent.ConcurrentHashMap_-Segment id="79"><sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" id="80" serialization="custom"><java.util.concurrent.locks.AbstractQueuedSynchronizer><default><state>0</state></default></java.util.concurrent.locks.AbstractQueuedSynchronizer><java.util.concurrent.locks.ReentrantLock_-Sync><default/></java.util.concurrent.locks.ReentrantLock_-Sync></sync><loadFactor>0.75</loadFactor></java.util.concurrent.ConcurrentHashMap_-Segment></segments></default><null/><null/></java.util.concurrent.ConcurrentHashMap></displayConfiguration><transactions class="linked-list" id="81"><transfer-transaction id="82"><day reference="44"/><amount>1234.55</amount><splits id="83"/><label></label><target class="account" reference="3"/><complement reference="43"/><source>false</source></transfer-transaction></transactions></target><complement reference="82"/><source>true</source></transfer-transaction></transactions></account><account reference="46"/></accounts><securities id="84"/><categories id="85"/><reports id="86"/><forecasts id="87"/><credits id="88"/><stockSplits id="89"/><securityCategoryMappings id="90"/></accountmanager>
